docker_image = "golang:1.13"
docker_volume = "muss_go_mods${env.BUILD_NUMBER}"

def drun(docker_args, cmd) {
  sh """
    docker run \
      -v ${docker_volume}:/go \
      -v "\$WORKSPACE:/mnt:ro" -w /mnt \
      -e GOPRIVATE -e GO111MODULE \
      ${docker_args} \
      ${docker_image} ${cmd}
  """
}

def go(cmd) {
  drun("--rm", "go ${cmd} ./...")
}

pipeline {
  agent {
    label "docker"
  }
  options {
    ansiColor('xterm')
  }
  environment {
    GOPRIVATE = 'gerrit.instructure.com'
  }
  stages {
    stage('Build') {
      steps {
        sh """docker pull ${docker_image}"""
        go("build")
      }
    }
    stage('Tests') {
      parallel {
        stage('Test') {
          environment {
            container = "muss${env.BUILD_NUMBER}"
            coverage_vol = "muss_coverage"
          }
          steps {
            sh "mkdir -p coverage"
            drun("--name '${env.container}' -v ${env.coverage_vol}:/mnt/coverage", "make test")
            sh """
              docker cp "${env.container}:/mnt/coverage" ./
              docker rm "${env.container}"
              docker volume rm "${env.coverage_vol}"
            """
          }
          post {
            success {
              archiveArtifacts artifacts: 'coverage/**'
              publishHTML(reportDir: 'coverage/',
                          reportFiles: 'index.html',
                          reportName: 'Code Coverage',
                          keepAll: true,
                          alwaysLinkToLastBuild: false,
                          allowMissing: false)

            }
          }
        }
        stage('Vet') {
          steps {
            go("vet")
          }
        }
      }
    }
  }
  post {
    always {
      sh """
        docker volume rm "${docker_volume}"
      """
    }
  }
}
